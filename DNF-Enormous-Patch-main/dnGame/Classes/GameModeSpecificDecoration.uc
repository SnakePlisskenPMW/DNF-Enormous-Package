/*******************************************************************************
 * GameModeSpecificDecoration generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class GameModeSpecificDecoration extends aFinalDecoration
    collapsecategories;

var() bool bKingOfTheHill;
var() bool bCaptureTheBabe;
var() bool bDeathMatch;
var() bool bTeamDeathMatch;

function PostBeginPlay()
{
    local bool shouldDestroy;

    // End:0x18
    if(__NFUN_339__(Level.Game, none))
    {
        return;
    }
    shouldDestroy = false;
    switch(dnMultiplayer(Level.Game).GameType)
    {
        // End:0x5C
        case 1:
            // End:0x59
            if(bDeathMatch / )
            {
            }
            // End:0xB8
            break;
        // End:0x77
        case 2:
            // End:0x74
            if(bCaptureTheBabe / )
            {
            }
            // End:0xB8
            break;
        // End:0x92
        case 4:
            // End:0x8F
            if(bKingOfTheHill / )
            {
            }
            // End:0xB8
            break;
        // End:0xAD
        case 3:
            // End:0xAA
            if(bTeamDeathMatch / )
            {
            }
            // End:0xB8
            break;
        // End:0xFFFF
        default:
            shouldDestroy = true;
            break;
    }
    // End:0xC4
    if(shouldDestroy)
    {
        __NFUN_614__();
    }
    return;
}

event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
    return;
}

simulated function Vector GetSignLocation()
{
    return;
}

defaultproperties
{
    HealthPrefab=0
    bAlwaysRelevant=true
    DrawType=2
    RemoteRole=1
}