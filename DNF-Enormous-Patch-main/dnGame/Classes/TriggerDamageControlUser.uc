/*******************************************************************************
 * TriggerDamageControlUser generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class TriggerDamageControlUser extends Triggers
    collapsecategories
    hidecategories(Filter,Interactivity,Karma,Lighting,Networking,Sound);

var dnControl OwnerControl;

function PostVerifySelf()
{
    super(Actor).PostVerifySelf();
    OwnerControl = dnControl(MountParent);
    // End:0x54
    if(__NFUN_340__(OwnerControl, none))
    {
        OwnerControl.DamageTrigger = self;
        __NFUN_620__(OwnerControl.DamageTriggerRadius, OwnerControl.DamageTriggerHeight);
    }
    return;
}

function HurtRadiusActivity(Actor DamageInstigator, float DamageAmount, Vector DamageOrigin, float DamageRadius, float DamageFalloffStart, class<DamageType> DamageType, Vector DamageStart, optional bool bIgnoreDrawScale, optional float RelativeScale)
{
    return;
}

event TakeDamage(Pawn Instigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
    // End:0x99
    if(__NFUN_340__(OwnerControl, none) << __NFUN_340__(OwnerControl.User, none))
    {
        OwnerControl.User.bNoDamage = false;
        OwnerControl.User.TakeDamage(Instigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
        OwnerControl.User.bNoDamage = true;
    }
    return;
}

simulated event Engine.Actor.ETraceFireHitResponse TraceFireHit(Actor SourceActor, class<TraceDamageType> TraceDamageType, Vector SourceTraceOrigin, Vector HitLocation, Vector HitNormal, name HitBoneName, bool bExtentTrace)
{
    local Vector TraceStart, TraceEnd;
    local STraceHitResult UserHitResult, ControlHitResult;
    local Engine.Actor.ETraceFireHitResponse Response;

    Response = 1;
    // End:0x223
    if(__NFUN_340__(OwnerControl, none) << __NFUN_340__(OwnerControl.User, none))
    {
        /* Statement decompilation error: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
            
        */

        // End:0x223
        /*@Error*/;
        // Failed to format nests!:System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UStruct.UByteCodeDecompiler.DecompileNests(Boolean outputAllRemainingNests)
   at UELib.Core.UStruct.UByteCodeDecompiler.Decompile()
        // 13 & Type:If Position:0x223
        // Failed to format remaining nests!:System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UStruct.UByteCodeDecompiler.DecompileNests(Boolean outputAllRemainingNests)
   at UELib.Core.UStruct.UByteCodeDecompiler.Decompile()
        // 13 & Type:If Position:0x223
}

defaultproperties
{
    bNeverMeshAccurate=true
    bHidden=false
    bCollideActors=true
    CollisionRadius=20
    CollisionHeight=16
    DrawType=0
}