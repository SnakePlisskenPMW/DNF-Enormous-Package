/*******************************************************************************
 * DecoActivities_KarmaImpulse generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class DecoActivities_KarmaImpulse extends DecoActivities
    native
    exportstructs
    hidecategories(Object);

cpptext
{
// Stripped
}

enum EKImpulseStyle
{
    KIMPULSE_Impulse,
    KIMPULSE_Force,
    KIMPULSE_Torque
};

var() noexport bool UserDirectional "When this is true, the object getting the impulse will use the direction from the instigator passed into figure out what direction to use (as if hitting away)";
var() noexport Vector UserDirectionalScaler "How much to scale the direction of the user by. So if you want to negate 'pitch', set X to -1. If you want to zero it, use 0. Pitch=X,Yaw=Y,Roll=Z";
var() noexport DecoActivities_KarmaImpulse.EKImpulseStyle ImpulseStyle "What sort of impulse to apply to the actor.";
var() noexport float ImpulseForce "Strength of the impulse to apply. If this is 0 or less nothing will happen.";
var() noexport float ImpulseForceVariance "Amount to vary the ImpulseForce by. ImpulseForce - 0.5 * Variance should always be greater than 0 for good results.";
var() noexport name ImpulseBone "Name of the bone we want to apply the impulse to.";
var() noexport bool ImpulseOffsetAbsolute "If this is true, then we won't adjust the offset based on the rotation of the actor.";
var() noexport Vector ImpulseOffset "Offset location from the origin to apply the force to.";
var() noexport Vector ImpulseOffsetVariance "Offset location variance.";
var() noexport bool ImpulseDirectionAbsolute "If this is true, then we won't adjust the direction based on the rotation of the actor.";
var() noexport Rotator ImpulseDirection "Which direction to apply the force in from the offset location.";
var() noexport Rotator ImpulseDirectionVariance "ImpulseDirection variance.";
var() noexport float MaxAngularVelocity "If the angular velocity is over this much, then don't allow the impulse to happen.";
var() noexport float MaxLinearVelocity "If the linear velocity is over this much, then don't allow the impulse to happen.";

defaultproperties
{
    UserDirectionalScaler=(X=1,Y=1,Z=1)
}