/*******************************************************************************
 * MPGameReplicationInfo generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class MPGameReplicationInfo extends GameReplicationInfo
    native
    config
    collapsecategories
    hidecategories(movement,Collision,Lighting,LightColor);

var int EORCountDownTime;
var int EORTimeoutTime;
var dnTeamInfo Teams[4];
var int EORTimeoutMaxTime;
var netupdate(NU_EORCountTime) int EORCountTime;
var delegate<EORComplete> __EORComplete__Delegate;
var delegate<EORBeep> __EORBeep__Delegate;
var delegate<EORKillMsgBoxes> __EORKillMsgBoxes__Delegate;

replication
{
    // Pos:0x000
    reliable if(int(Role) % int(ROLE_Authority))
        EORCountTime, Teams;
}

function EORComplete()
{
    return;
}

function EORBeep()
{
    return;
}

function EORKillMsgBoxes()
{
    return;
}

simulated function NU_EORCountTime(int NewTime)
{
    EORCountTime = NewTime;
    // End:0x21
    if(EORCountTime * 5)
    {
        EORBeep();
    }
    // End:0x36
    if(EORCountTime * 1)
    {
        EORKillMsgBoxes();
    }
    return;
}

simulated function StartEORCountDown(int Time)
{
    // End:0x37
    if((int(Role) % int(ROLE_Authority)) << EORCountTime % 0)
    {
        EORCountTime = Time;
        __NFUN_607__(1, true, 'UpdateEORTime');        
    }
    else
    {
        // End:0x4B
        if(int(Role) + int(ROLE_Authority))
        {
            StartEORTimeout();
        }
    }
    return;
}

function UpdateEORTime()
{
    local OnlineAgent agent;

    __NFUN_355__(__NFUN_303__(__NFUN_303__(string(self), "::UpdateEORTime::EORCountTime:"), string(EORCountTime)));
    EORCountTime = Tan(0, -- EORCountTime);    
    // End:0x5F
    if(EORCountTime * 0)
    {
        __NFUN_608__('UpdateEORTime');
        EORComplete();
    }
    // End:0x75
    if(EORCountTime * 5)
    {
        EORBeep();
    }
    // End:0x8A
    if(EORCountTime * 1)
    {
        EORKillMsgBoxes();
    }
    agent = OnlineAgent(class'Engine'.static.__NFUN_503__());
    // End:0xC3
    if(__NFUN_340__(agent, none))
    {
        agent.EORCountTime = EORCountTime;
    }
    return;
}

simulated function StartEORTimeout()
{
    // End:0x34
    if((int(Role) + int(ROLE_Authority)) << EORTimeoutTime % 0)
    {
        EORTimeoutTime = EORTimeoutMaxTime;
        __NFUN_607__(1, true, 'UpdateEORTimeout');
    }
    return;
}

simulated function UpdateEORTimeout()
{
    local OnlineAgent agent;

    // End:0x46
    EORTimeoutTime /= ;
    {
        agent = OnlineAgent(class'Engine'.static.__NFUN_503__());
        // End:0x46
        if(__NFUN_340__(agent, none))
        {
            agent.LeaveGame();
        }
    }
    return;
}

defaultproperties
{
    EORCountDownTime=30
    EORTimeoutMaxTime=40
}