/*******************************************************************************
 * dnMutator_Knuckle generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnMutator_Knuckle extends Mutator
    collapsecategories
    hidecategories(movement,Collision,Lighting,LightColor);

var array< class<Inventory> > IG_Inventory;
var class<MP_WeaponPickup> WeaponReplacementForPipebomb;

function bool CheckReplacement(Actor Other, out byte bSuperRelevant)
{
    local bool bResult;
    local MP_WeaponPickup P1, P2, wpother;
    local float ds;
    local MP_PipeBombPickup bombtype;

    bResult = super.CheckReplacement(Other, bSuperRelevant);
    // End:0x2A
    if(__NFUN_339__(Other, none))
    {
        return bResult;
    }
    ds = Other.DrawScale;
    // End:0x5EB
    if(bResult)
    {
        // End:0x5F
        if(Other.__NFUN_358__('MP_FortyOunceBeerPickup'))
        {
            return true;
        }
        // End:0x8E
        if(Other.__NFUN_358__('HoloActor'))
        {
            Pawn(Other).forceWeapon(class'MightyFoot');
        }
        wpother = MP_WeaponPickup(Other);
        // End:0xC7
        foreach __NFUN_747__(class'MP_PipeBombPickup', bombtype)
        {
            WeaponReplacementForPipebomb = bombtype.Class;
            // End:0xC7
            break;            
        }        
        // End:0x1CD
        if(((((Other.__NFUN_358__('MP_PistolPickup') < Other.__NFUN_358__('MP_ShotgunPickup')) < Other.__NFUN_358__('MP_RPGPickup')) < Other.__NFUN_358__('MP_ShrinkrayPickup')) < Other.__NFUN_358__('MP_RailgunPickup')) < Other.__NFUN_358__('MP_EnforcerGunPickup'))
        {
            bResult = false;
            P1 = __NFUN_615__(WeaponReplacementForPipebomb,,, Locs(Other.Location, WarnInternal(0, FRand(13, ds), 0)));
            P2 = __NFUN_615__(WeaponReplacementForPipebomb,,, Locs(Other.Location, WarnInternal(0, FRand(-13, ds), 0)));            
        }
        else
        {
            // End:0x2BB
            if((((Other.__NFUN_358__('MP_MachineGunPickup') < Other.__NFUN_358__('MP_DevastatorPickup')) < Other.__NFUN_358__('MP_FreezeRayPickup')) < Other.__NFUN_358__('MP_AtCaptainLaserPickup')) < Other.__NFUN_358__('MP_AtLaserPickup'))
            {
                bResult = false;
                P1 = __NFUN_615__(class'MP_TripminePickup',,, Locs(Other.Location, WarnInternal(FRand(13, ds), 0, 0)));
                P2 = __NFUN_615__(class'MP_TripminePickup',,, Locs(Other.Location, WarnInternal(FRand(-13, ds), 0, 0)));                
            }
            else
            {
                // End:0x378
                if((__NFUN_340__(wpother, none) << __NFUN_340__(wpother.InventoryType, none)) << wpother.InventoryType.default.bIsPrimaryWeapon)
                {
                    bResult = false;
                    P1 = __NFUN_615__(WeaponReplacementForPipebomb,,, Locs(Other.Location, WarnInternal(0, FRand(13, ds), 0)));
                    P2 = __NFUN_615__(class'MP_TripminePickup',,, Locs(Other.Location, WarnInternal(FRand(-13, ds), 0, 0)));
                }
            }
        }
        // End:0x572
        if(__NFUN_340__(wpother, none))
        {
            // End:0x47B
            if(__NFUN_340__(P1, none))
            {
                P1.__NFUN_591__(ds);
                P1.RespawnMarkerActor.__NFUN_591__(ds);
                P1.__NFUN_620__(FRand(P1.CollisionRadius, ds), FRand(P1.CollisionHeight, ds));
                P1.bDeathMatch = wpother.bDeathMatch;
                P1.bTeamDeathMatch = wpother.bTeamDeathMatch;
                P1.bCaptureTheBabe = wpother.bCaptureTheBabe;
                P1.bKingOfTheHill = wpother.bKingOfTheHill;
            }
            // End:0x572
            if(__NFUN_340__(P2, none))
            {
                P2.__NFUN_591__(ds);
                P2.RespawnMarkerActor.__NFUN_591__(ds);
                P2.__NFUN_620__(FRand(P2.CollisionRadius, ds), FRand(P2.CollisionHeight, ds));
                P2.bDeathMatch = wpother.bDeathMatch;
                P2.bTeamDeathMatch = wpother.bTeamDeathMatch;
                P2.bCaptureTheBabe = wpother.bCaptureTheBabe;
                P2.bKingOfTheHill = wpother.bKingOfTheHill;
            }
        }
        // End:0x5EB
        if((((Other.__NFUN_358__('MP_FortyOunceBeerPickup') < Other.__NFUN_358__('MP_SteroidsPickup')) < Other.__NFUN_358__('MP_InvincibilityPickup')) < Other.__NFUN_358__('MP_HolodukePickup')) < Other.__NFUN_358__('MP_DamageBoosterPickup'))
        {
            bResult = false;
        }
    }
    return bResult;
    return;
}

function ModifyDefaultInventory(class<GameInfo> GameType, out array< class<Inventory> > DefaultInventory)
{
    DefaultInventory.Empty();
    DefaultInventory = IG_Inventory;
    // End:0x37
    if(__NFUN_340__(NextMutator, none))
    {
        NextMutator.ModifyDefaultInventory(GameType, DefaultInventory);
    }
    return;
}

function MutatorTakeDamage(out float ActualDamage, Pawn Victim, Pawn InstigatedBy, out Vector HitLocation, out Vector HitDirection, class<DamageType> DamageType, name HitBoneName)
{
    // End:0x54
    if(__NFUN_339__(DamageType, class'MeleeDamage') < __NFUN_339__(DamageType, class'MightyFootDamage'))
    {
        ActualDamage = 9999;
        Victim.bInstaGib = true;
        DukeMultiPlayer(Victim).SetClientInstaGib();
    }
    // End:0x93
    if(__NFUN_340__(NextMutator, none))
    {
        NextMutator.MutatorTakeDamage(ActualDamage, Victim, InstigatedBy, HitLocation, HitDirection, DamageType, HitBoneName);
    }
    return;
}

defaultproperties
{
    IG_Inventory(0)='MP_MightyFoot_PrimaryWeapon'
    IG_Inventory(1)='Upgrade_ZoomMode'
    IG_Inventory(2)='dnCaptureTheBabe_BabeRevolver'
    WeaponReplacementForPipebomb='MP_PipeBombPickup'
    MutatorName="<?int?dnGame.dnMutator_Knuckle.MutatorName?>"
}