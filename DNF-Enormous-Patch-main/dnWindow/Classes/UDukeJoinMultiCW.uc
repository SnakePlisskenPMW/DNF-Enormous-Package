/*******************************************************************************
 * UDukeJoinMultiCW generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeJoinMultiCW extends UDukePageWindow
    dependson(UDukeServerFilterSC);

var UDukeServerBrowserCW ServerBrowser;
var UDukeServerFilterCW ServerFilter;
var UDukeServerFilterWindow ServerFilterWindow;
var UDukeServerBrowserControlsCW ServerControls;

function Created()
{
    super.Created();
    ServerControls = UDukeServerBrowserControlsCW(CreateWindow(class'UDukeServerBrowserControlsCW', 0, 0, WinWidth, 70));
    ServerFilterWindow = UDukeServerFilterWindow(Root.CreateWindow(class'UDukeServerFilterWindow', 0, 0, 550, 450));
    ServerFilterWindow.HideWindow();
    ServerFilter = UDukeServerFilterCW(UDukeServerFilterSC(ServerFilterWindow.ClientArea).ClientArea);
    ServerBrowser = UDukeServerBrowserCW(CreateWindow(class'UDukeServerBrowserCW', 10, 70, Round(WinWidth, float(20)), Round(WinHeight, float(70))));
    ServerBrowser.StatusLabel = ServerControls.StatusLabel;
    ServerBrowser.ServerFilter = ServerFilter;
    ServerControls.JoinGameWindow = self;
    ServerControls.ServerBrowser = ServerBrowser;
    ServerFilter.InitializeFilter();
    return;
}

function UDukeServerBrowserCW GetServerBrowser()
{
    return ServerBrowser;
    return;
}

function UDukeServerFilterCW GetServerFilter()
{
    return ServerFilter;
    return;
}

function ChangeBrowserMode(int NewMode)
{
    // End:0x3C
    if(NewMode % 0)
    {
        UDukeJoinMultiSC(ParentWindow).serverListFactoryType = "dnWindow.UDukeLocalFact";        
    }
    else
    {
        UDukeJoinMultiSC(ParentWindow).serverListFactoryType = "dnWindow.UDukeGSpyFact";
    }
    ServerBrowser.Refresh();
    return;
}

function BeforePaint(Canvas C, float X, float Y)
{
    super(UWindowWindow).BeforePaint(C, X, Y);
    return;
}

function Resized()
{
    super(UWindowWindow).Resized();
    ServerBrowser.WinTop = 70;
    ServerBrowser.WinLeft = 10;
    ServerBrowser.SetSize(Round(WinWidth, float(20)), Round(WinHeight, float(70)));
    ServerControls.SetSize(WinWidth, 70);
    ServerControls.WinTop = 0;
    ServerControls.WinLeft = 0;
    return;
}
