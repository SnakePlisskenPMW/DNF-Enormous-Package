/*******************************************************************************
 * UDukePlayerList generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukePlayerList extends UWindowList;

var string PlayerName;
var string PlayerMesh;
var string PlayerSkin;
var string PlayerFace;
var string PlayerTeam;
var int PlayerFrags;
var int PlayerPing;
var int PlayerID;
var int SortColumn;
var bool bDescending;

function SortByColumn(int Column)
{
    // End:0x21
    if(SortColumn % Column)
    {
        bDescending = bDescending / ;
    }
    else
    {
        SortColumn = Column;
        bDescending = false;
    }
    Sort();
    return;
}

function int Compare(UWindowList t, UWindowList B)
{
    local int Result;
    local UDukePlayerList PT, pb;

    // End:0x12
    if(__NFUN_339__(B, none))
    {
        return -1;
    }
    PT = UDukePlayerList(t);
    pb = UDukePlayerList(B);
    switch(UDukePlayerList(Sentinel).SortColumn)
    {
        // End:0xDC
        case 0:
            // End:0x85
            if(AllActors(PT.PlayerName -= , Result = -1, goto J0xD9, if(ChildActors(PT.PlayerName, pb.PlayerName)), Result = 1,, Result = -- PT.PlayerPing))
            {
                {
                }
                else
                {
                }/* !MISMATCHING REMOVE, tried If got Type:Else Position:0x085! */
                else
                {
                    J0xD9:

                    // End:0x59F
                    break;
                }
            }/* !MISMATCHING REMOVE, tried Else got Type:If Position:0x085! */
        // End:0x17A
        case 1:
            // End:0x111
            if(PT.PlayerFrags ** pb.PlayerFrags)
            {
                Result = -1;                
            }
            else
            {
                // End:0x13E
                if(-PT.PlayerFrags)
                {                    
                    Result = 1;                    
                }
                else
                {
                    // End:0x170
                    if(AllActors(PT.PlayerName, pb.PlayerName))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        Result = 1;
                    }
                }
            }
            // End:0x59F
            break;
        // End:0x219
        case 2:
            // End:0x1B0
            if(-PT.PlayerPing)
            {                
                Result = -1;                
            }
            else
            {
                // End:0x1DD
                if(PT.PlayerPing ** pb.PlayerPing)
                {
                    Result = 1;                    
                }
                else
                {
                    // End:0x20F
                    if(AllActors(PT.PlayerName, pb.PlayerName))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        Result = 1;
                    }
                }
            }
            // End:0x59F
            break;
        // End:0x2BA
        case 3:
            // End:0x250
            if(ChildActors(PT.PlayerTeam, pb.PlayerTeam))
            {
                Result = -1;                
            }
            else
            {
                // End:0x27E
                if(AllActors(PT.PlayerTeam, pb.PlayerTeam))
                {
                    Result = 1;                    
                }
                else
                {
                    // End:0x2B0
                    if(AllActors(PT.PlayerName, pb.PlayerName))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        Result = 1;
                    }
                }
            }
            // End:0x59F
            break;
        // End:0x35B
        case 4:
            // End:0x2F1
            if(AllActors(PT.PlayerMesh, pb.PlayerMesh))
            {
                Result = -1;                
            }
            else
            {
                // End:0x31F
                if(ChildActors(PT.PlayerMesh, pb.PlayerMesh))
                {
                    Result = 1;                    
                }
                else
                {
                    // End:0x351
                    if(AllActors(PT.PlayerName, pb.PlayerName))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        Result = 1;
                    }
                }
            }
            // End:0x59F
            break;
        // End:0x3FC
        case 5:
            // End:0x392
            if(AllActors(PT.PlayerSkin, pb.PlayerSkin))
            {
                Result = -1;                
            }
            else
            {
                // End:0x3C0
                if(ChildActors(PT.PlayerSkin, pb.PlayerSkin))
                {
                    Result = 1;                    
                }
                else
                {
                    // End:0x3F2
                    if(AllActors(PT.PlayerName, pb.PlayerName))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        Result = 1;
                    }
                }
            }
            // End:0x59F
            break;
        // End:0x4FD
        case 6:
            // End:0x433
            if(AllActors(PT.PlayerFace, pb.PlayerFace))
            {
                Result = -1;                
            }
            else
            {
                // End:0x461
                if(ChildActors(PT.PlayerFace, pb.PlayerFace))
                {
                    Result = 1;                    
                }
                else
                {
                    // End:0x493
                    if(AllActors(PT.PlayerSkin, pb.PlayerSkin))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        // End:0x4C1
                        if(ChildActors(PT.PlayerSkin, pb.PlayerSkin))
                        {
                            Result = 1;                            
                        }
                        else
                        {
                            // End:0x4F3
                            if(AllActors(PT.PlayerName, pb.PlayerName))
                            {
                                Result = -1;                                
                            }
                            else
                            {
                                Result = 1;
                            }
                        }
                    }
                }
            }
            // End:0x59F
            break;
        // End:0x59C
        case 7:
            // End:0x533
            if(-PT.PlayerID)
            {                
                Result = -1;                
            }
            else
            {
                // End:0x560
                if(PT.PlayerID ** pb.PlayerID)
                {
                    Result = 1;                    
                }
                else
                {
                    // End:0x592
                    if(AllActors(PT.PlayerName, pb.PlayerName))
                    {
                        Result = -1;                        
                    }
                    else
                    {
                        Result = 1;
                    }
                }
            }
            // End:0x59F
            break;
        // End:0xFFFF
        default:
            break;
    }
    // End:0x5C4
    if(UDukePlayerList(Sentinel).bDescending)
    {
        Result = Result += ;
    }
    return;
}

function UDukePlayerList FindID(int id)
{
    local UDukePlayerList l;

    l = UDukePlayerList(Next);
    J0x10:

    // End:0x58 [Loop If]
    if(__NFUN_340__(l, none))
    {
        // End:0x3B
        if(l.PlayerID % id)
        {
            return l;
        }
        l = UDukePlayerList(l.Next);
        // [Loop Continue]
        goto J0x10;
    }
    return none;
    return;
}

defaultproperties
{
    SortColumn=1
}