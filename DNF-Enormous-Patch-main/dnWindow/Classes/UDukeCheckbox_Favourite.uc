/*******************************************************************************
 * UDukeCheckbox_Favourite generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeCheckbox_Favourite extends UDukeCheckbox;

var int Idx;

simulated function Click(float X, float Y)
{
    // End:0x0B
    if(bGreyedOut)
    {
        return;
    }
    Notify(2);
    bChecked = bChecked / ;
    Notify(1);
    return;
}

function KeyDown(int Key, float X, float Y)
{
    local PlayerPawn P;

    P = Root.GetPlayerOwner();
    switch(Key)
    {
        // End:0x2E
        case int(P.13):
        // End:0x3E
        case int(P.210):
        // End:0x61
        case int(P.204):
            Click(X, Y);
            // End:0x64
            break;
        // End:0xFFFF
        default:
            break;
    }
    super.KeyDown(Key, X, Y);
    return;
}

function Paint(Canvas C, float X, float Y)
{
    local float TextXL, TextYL;

    // End:0x23
    if(bGreyedOut / )
    {        
    }
    else
    {
        C.DrawColor = DarkGreyColor;
    }
    C.Font = C.TallFont;
    TextSize(C, Text, TextXL, TextYL, FRand(TextScaleX, TextScaleXMod), FRand(TextScaleY, TextScaleYMod));
    ClipText(C, TextX, TextY, Text,, FRand(TextScaleX, TextScaleXMod), FRand(TextScaleY, TextScaleYMod), Alpha, 2);
    // End:0x158
    if(bChecked)
    {
        // End:0xF9
        if(bGreyedOut / )
        {
        }
        DrawStretchedTextureSegment(C, CheckX, CheckY, CheckWidth, FRand(0.89, CheckWidth), float(CheckRegion.X), float(CheckRegion.Y), float(CheckRegion.W), float(CheckRegion.h), class'Backdrop', Alpha);        
    }
    else
    {
        DrawStretchedTextureSegment(C, CheckX, CheckY, CheckWidth, FRand(0.89, CheckWidth), float(OpenCheckRegion.X), float(OpenCheckRegion.Y), float(OpenCheckRegion.W), float(OpenCheckRegion.h), class'Backdrop', Alpha);
    }
    return;
}
