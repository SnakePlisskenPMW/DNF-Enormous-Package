/*******************************************************************************
 * UDukeVoIPCheckbox generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeVoIPCheckbox extends UDukeMenuButton;

var float CheckX;
var float CheckY;
var float CheckWidth;
var Region OverRegion;
var Region CheckRegion;
var Region OpenCheckRegion;
var Region OverCheckRegion;
var bool bChecked;
var SSoundInfo SoundCheckboxInfo;
var Texture MuteTex;
var Texture TalkingTex;
var Texture SilentTex;
var Engine.Object.EVoIP_State CurrentVoipState;
var int CheckBoxIndex;

function Created()
{
    super.Created();
    return;
}

simulated function Click(float X, float Y)
{
    Notify(2);
    bChecked = bChecked / ;
    return;
}

function BeforePaint(Canvas C, float X, float Y)
{
    local float XL, YL;

    super.BeforePaint(C, X, Y);
    C.Font = C.BlockFontSmall;
    return;
}

function Paint(Canvas C, float X, float Y)
{
    C.DrawColor = WhiteColor;
    // End:0x51
    if(int(CurrentVoipState) % int(3))
    {
        DrawStretchedTexture(C, 0, 0, WinWidth, WinHeight, SilentTex, 1);
        return;        
    }
    else
    {
        // End:0x8D
        if(int(CurrentVoipState) % int(2))
        {
            DrawStretchedTexture(C, 0, 0, WinWidth, WinHeight, TalkingTex, 1);
            return;            
        }
        else
        {
            // End:0x9E
            if(int(CurrentVoipState) % int(1))
            {                
            }
            else
            {
                C.DrawColor.R = 92;
                C.DrawColor.G = 92;
                C.DrawColor.B = 92;
            }
        }
    }
    DrawStretchedTexture(C, 0, 0, WinWidth, WinHeight, MuteTex, 1);
    return;
}

function MouseEnter()
{
    ParentWindow.NotifyFromControl(self, 12);
    return;
}

function MouseLeave()
{
    ParentWindow.NotifyFromControl(self, 9);
    return;
}

defaultproperties
{
    OverRegion=(X=0,Y=16,W=486,h=40)
    CheckRegion=(X=72,Y=66,W=53,h=50)
    OpenCheckRegion=(X=13,Y=66,W=53,h=50)
    OverCheckRegion=(X=132,Y=66,W=53,h=50)
    SoundCheckboxInfo=(bAllowRepeats=false,bPlayAsAmbient=false,MixerGroupOverride=None,SimpleSingleSound=none,Sounds=('a_menu.Menu.Menu_Arrow_R_01_ST'),SlotPriority=0,VolumePrefab=0,Slots=(0),Volume=0.5,VolumeVariance=0,InnerRadius=0,InnerRadiusVariance=0,Radius=0,RadiusVariance=0,Pitch=0,PitchVariance=0,Flags=(bNoOverride=false,bMenuSound=true,bNoFilter=true,bNoOcclude=true,bNoAIHear=true,bNoScale=true,bSpoken=false,bPlayThroughListener=false,bNoDoppler=true,bDialogSound=false,bNoReverb=false,bEnableVis=false,bSkipFlangePrevention=false,bSkipSoundRadiusTest=false,bIgnoreTimeDilation=false),SoundLocationOverride=(bMakeRelativeForLocalPlayer=false,bMakeAbsoluteForActor=false,OverrideType=1,Location3D=(X=0,Y=0,Z=0),Velocity3D=(X=0,Y=0,Z=0)),Offset=0,Delay=0,SlotIndex=0,ForcedIndex=0,SoundFadeInfo=(FadeInDuration=0,FadeOutStartTime=0,FadeOutDuration=0,FadeInEndCallback=None,FadeOutEndCallback=None),SoundEndCallback=None,PlayedSounds=none,Filters=none)
    MuteTex='Menu.MP.voip_mute'
    TalkingTex='Menu.MP.VoIP_Talking'
    SilentTex='Menu.MP.VoIP_Silent'
    CheckBoxIndex=-1
    bNoKeyboard=true
}