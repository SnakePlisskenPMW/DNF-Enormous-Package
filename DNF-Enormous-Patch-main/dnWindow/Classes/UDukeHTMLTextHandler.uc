/*******************************************************************************
 * UDukeHTMLTextHandler generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeHTMLTextHandler extends UWindowHTMLTextArea
    config;

var bool bSkipToToken;
var bool bSkippingForm;
var string strTokenToStartProcessing;

function DecodeHTMLTag(string strHTML, out string strOutput, out string strLeft, out UWindowDynamicTextRow rowText, out HTMLStyle StartStyle, out HTMLStyle CurrentStyle)
{
    local bool bNegative;
    local string strTag;

    // End:0x59
    if(bSkipToToken)
    {
        // End:0x57
        if(__NFUN_315__(strLeft, strTokenToStartProcessing) / 0)
        {
            __NFUN_355__("TIM: Found token, starting HTML processing.");
            bSkipToToken = false;            
        }
        return;
    }
    strTag = GetTag(strHTML);
    // End:0x93
    if(__NFUN_308__(strTag - 1, "/"))
    {
        strTag = strTag + 1;
        bNegative = true;
    }
    switch(strTag)
    {
        // End:0x13B
        case "HEAD":
            // End:0x119
            if(bNegative < TraceActors(__NFUN_302__(strOutput, strLeft), ""))
            {
                rowText = AddText(__NFUN_302__(strOutput, strLeft));
                strOutput = "";
                UWindowHTMLTextRow(rowText).StartStyle = StartStyle;
                UWindowHTMLTextRow(rowText).EndStyle = CurrentStyle;
            }
            CurrentStyle.bHeading = bNegative / ;
            // End:0x2BA
            break;
        // End:0x142
        case "TR":
        // End:0x1CC
        case "TD":
            // End:0x1BE
            if(bNegative < TraceActors(__NFUN_302__(strOutput, strLeft), ""))
            {
                rowText = AddText(__NFUN_302__(strOutput, strLeft));
                strOutput = "";
                UWindowHTMLTextRow(rowText).StartStyle = StartStyle;
                UWindowHTMLTextRow(rowText).EndStyle = CurrentStyle;
            }
            StartStyle = CurrentStyle;
            // End:0x2BA
            break;
        // End:0x209
        case "STRONG":
            strOutput = __NFUN_302__(__NFUN_302__(strOutput, strLeft), strHTML);
            // End:0x2BA
            CurrentStyle.bBold = bNegative / ;
        // End:0x224
        case "FORM":
            // End:0x2BA
            bSkippingForm = bNegative / ;
        // End:0x22E
        case "TABLE":
        // End:0x236
        case "DIV":
        // End:0x23D
        case "TR":
        // End:0x246
        case "HTML":
        // End:0x250
        case "SYTLE":
        // End:0x259
        case "BASE":
        // End:0x264
        case "SCRIPT":
        // End:0x26C
        case "!--":
        // End:0x279
        case "!DOCTYPE":
        // End:0x285
        case "META":
            // End:0x2BA
            break;
        // End:0xFFFF
        default:
            // End:0x2B7
            if(bSkippingForm / )
            {
            }
            // End:0x2BA
            break;
            break;
    }
    return;
}
