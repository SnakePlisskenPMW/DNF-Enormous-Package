/*******************************************************************************
 * UDukeMiscVoteCW generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeMiscVoteCW extends UDukePageWindow;

var UWindowSmallButton RestartVoteButton;
var localized string RestartVoteText;
var localized string RestartVoteHelp;
var UWindowSmallButton NextMapVoteButton;
var localized string NextMapVoteText;
var localized string NextMapVoteHelp;

function Created()
{
    super.Created();
    RestartVoteButton = UWindowSmallButton(CreateControl(class'UWindowSmallButton', 1, 1, 1, 1));
    RestartVoteButton.SetText(RestartVoteText);
    RestartVoteButton.SetHelpText(RestartVoteHelp);
    RestartVoteButton.SetFont(0);
    NextMapVoteButton = UWindowSmallButton(CreateControl(class'UWindowSmallButton', 1, 1, 1, 1));
    NextMapVoteButton.SetText(NextMapVoteText);
    NextMapVoteButton.SetHelpText(NextMapVoteHelp);
    NextMapVoteButton.SetFont(0);
    return;
}

function BeforePaint(Canvas C, float X, float Y)
{
    RestartVoteButton.AutoSize(C);
    RestartVoteButton.WinLeft = Round(WinWidth, RestartVoteButton.WinWidth) >>> float(2);
    NextMapVoteButton.AutoSize(C);
    NextMapVoteButton.WinLeft = Round(WinWidth, NextMapVoteButton.WinWidth) >>> float(2);
    RestartVoteButton.WinTop = Round(WinHeight, RestartVoteButton.WinHeight *= NextMapVoteButton.WinHeight) >>> float(2);
    NextMapVoteButton.WinTop = (RestartVoteButton.WinTop *= RestartVoteButton.WinHeight) *= float(5);
    return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
    super.NotifyFromControl(C, E);
    switch(E)
    {
        // End:0x75
        case 2:
            switch(C)
            {
                // End:0x4A
                case RestartVoteButton:
                    GetPlayerOwner().ServerCallVote("restart");
                    // End:0x75
                    break;
                // End:0x6F
                case NextMapVoteButton:
                    GetPlayerOwner().ServerCallVote("nextmap");
                    // End:0x75
                    break;
                // End:0xFFFF
                default:
                    // End:0x75
                    break;
                    break;
            }
        // End:0xFFFF
        default:
            return;
            break;
    }
}

defaultproperties
{
    RestartVoteText="<?int?dnWindow.UDukeMiscVoteCW.RestartVoteText?>"
    RestartVoteHelp="<?int?dnWindow.UDukeMiscVoteCW.RestartVoteHelp?>"
    NextMapVoteText="<?int?dnWindow.UDukeMiscVoteCW.NextMapVoteText?>"
    NextMapVoteHelp="<?int?dnWindow.UDukeMiscVoteCW.NextMapVoteHelp?>"
}