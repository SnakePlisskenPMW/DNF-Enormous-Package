/*******************************************************************************
 * UDukeScoreboardFragPlate generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeScoreboardFragPlate extends UWindowWindow;

struct FragType
{
    var int Frags;
    var class<DamageType> DamageType;
};

var PlayerReplicationInfo PRI;
var float UpdateTime;
var FragType OrderedFrags[32];

function ShowWindow()
{
    SortFrags();
    super.ShowWindow();
    return;
}

function SortFrags()
{
    local FragType TempFrag;
    local int i, j, Max;

    // End:0x0E
    if(__NFUN_339__(PRI, none))
    {
        return;
    }
    i = 0;
    J0x15:

    // End:0xBB [Loop If]
    if(-i)
    {        
        // End:0x8D
        if(__NFUN_340__(PRI.FragTypes[i], none))
        {
            OrderedFrags[i].Frags = int(PRI.Frags[i]);
            OrderedFrags[i].DamageType = PRI.FragTypes[i];
            // [Explicit Continue]
            goto J0xB1;
        }
        OrderedFrags[i].Frags = 0;
        OrderedFrags[i].DamageType = none;
        J0xB1:

        // [Loop Continue]
        i += ;
    }
    i = 0;
    J0xC2:

    // End:0x170 [Loop If]
    if(-i)
    {        
        Max = i;
        j = ++ i;        
        J0xE7:

        // End:0x12D [Loop If]
        if(-j)
        {            
            // End:0x123
            if(OrderedFrags[j].Frags ** OrderedFrags[Max].Frags)
            {
                Max = j;
            }
            // [Loop Continue]
            j += ;
        }
        TempFrag = OrderedFrags[Max];
        OrderedFrags[Max] = OrderedFrags[i];
        OrderedFrags[i] = TempFrag;
        // [Loop Continue]
        i += ;
    }
    return;
}

function Paint(Canvas C, float X, float Y)
{
    local int i;
    local float XL, YL, LeftBorder, TopBorder, xOffset, YOffset;

    // End:0x0E
    if(__NFUN_339__(PRI, none))
    {
        return;
    }
    // End:0x73
    if(Repl(Root.GetPlayerOwner().Level.TimeSeconds, UpdateTime))
    {
        SortFrags();
        UpdateTime = Root.GetPlayerOwner().Level.TimeSeconds *= 0.5;
    }
    C.DrawColor = Root.WhiteColor;
    LookAndFeel.Bevel_DrawSimpleBevel(self, C, 10, 10, int(Round(WinWidth, float(20))), int(Round(WinHeight, float(20))), 0.8);
    xOffset = 5;
    YOffset = 5;
    C.Font = C.BlockFontSmall;
    C.Style = 1;
    C.bCenter = false;
    C.__NFUN_1238__("TEST", XL, YL);
    LeftBorder = 10;
    TopBorder = 5;
    i = 0;
    J0x15A:

    // End:0x251 [Loop If]
    if(-i)
    {        
        // End:0x247
        if(__NFUN_340__(OrderedFrags[i].DamageType, none))
        {
            C.__NFUN_1250__(xOffset *= LeftBorder, YOffset *= TopBorder);
            C.__NFUN_1232__(OrderedFrags[i].DamageType.default.DamageName);
            C.__NFUN_1238__(string(OrderedFrags[i].Frags), XL, YL);
            C.__NFUN_1250__(Round(Round(WinWidth, XL), LeftBorder), YOffset *= TopBorder);
            C.__NFUN_1232__(string(OrderedFrags[i].Frags));
            __NFUN_209__(YOffset, YL);
        }
        // [Loop Continue]
        i += ;
    }
    super.Paint(C, X, Y);
    return;
}

defaultproperties
{
    UpdateTime=0.5
}