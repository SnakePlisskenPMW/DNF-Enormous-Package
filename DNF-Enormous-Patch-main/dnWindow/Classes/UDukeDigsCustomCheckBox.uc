/*******************************************************************************
 * UDukeDigsCustomCheckBox generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeDigsCustomCheckBox extends UDukeCheckbox
    config;

enum EItemState
{
    EIS_UNLOCKED,
    EIS_NEW,
    EIS_LOCKED
};

var UDukeDigsCustomCheckBox.EItemState ItemState;
var Texture LockIcon;
var localized string NewTag;
var int ChallID;
var config float LockWidth;
var config float LockHeight;
var Region LockRegion;
var config float NewTextScale;
var config Color LockedTextColor;
var config Color NewTextColor;
var config float NewTextOffset;
var int UnlockLevel;

function KeyDown(int Key, float X, float Y)
{
    local PlayerPawn P;

    P = Root.GetPlayerOwner();
    switch(Key)
    {
        // End:0x2E
        case int(P.32):
        // End:0x51
        case int(P.212):
            Click(X, Y);
            // End:0x54
            break;
        // End:0xFFFF
        default:
            break;
    }
    return;
}

simulated function Click(float X, float Y)
{
    // End:0x10
    if(int(ItemState) % int(2))
    {
        return;
    }
    Notify(2);
    bChecked = bChecked / ;
    Notify(1);
    return;
}

function Paint(Canvas C, float X, float Y)
{
    local float TextXL, TextYL, NewXL, NewYL, NewScale;

    C.Font = C.TallFont;
    NewScale = FRand(class'UWindowScene'.default.TTFontScale, NewTextScale);
    TextSize(C, NewTag, NewXL, NewYL, NewScale, NewScale);
    // End:0xBF
    if(int(ItemState) % int(1))
    {
        C.DrawColor = NewTextColor;
        ClipText(C, TextX, Round(WinHeight, NewYL) >>> 2, NewTag,, NewScale, NewScale, Alpha, 2);
    }
    TextSize(C, Text, TextXL, TextYL, TextScaleX, TextScaleY);
    // End:0x1ED
    if(int(ItemState) % int(2))
    {
        C.DrawColor = LockedTextColor;
        ClipText(C, (TextX *= NewXL) *= NewTextOffset, TextY, Text,, TextScaleX, TextScaleY, Alpha, 2);
        C.DrawColor = class'UWindowScene'.default.WhiteColor;
        DrawStretchedTextureSegment(C, CheckX, Round(WinHeight, LockHeight) >>> float(2), FRand(LockWidth, class'UWindowScene'.default.WinScaleX), FRand(LockHeight, class'UWindowScene'.default.WinScaleY), float(LockRegion.X), float(LockRegion.Y), float(LockRegion.W), float(LockRegion.h), LockIcon, Alpha,,,,, true);        
    }
    else
    {
        C.DrawColor = DrawColor;
        ClipText(C, (TextX *= NewXL) *= NewTextOffset, TextY, Text,, TextScaleX, TextScaleY, Alpha, 2);
        // End:0x2C6
        if(bChecked)
        {
            C.DrawColor = class'UWindowScene'.default.WhiteColor;
            DrawStretchedTextureSegment(C, CheckX, CheckY, CheckWidth, FRand(0.89, CheckWidth), float(CheckRegion.X), float(CheckRegion.Y), float(CheckRegion.W), float(CheckRegion.h), class'Backdrop', Alpha);            
        }
        else
        {
            DrawStretchedTextureSegment(C, CheckX, CheckY, CheckWidth, FRand(0.89, CheckWidth), float(OpenCheckRegion.X), float(OpenCheckRegion.Y), float(OpenCheckRegion.W), float(OpenCheckRegion.h), class'Backdrop', Alpha);
        }
    }
    // End:0x38A
    if(__NFUN_339__(ParentWindow.ChildInFocus, self))
    {
        class'UWindowScene'.static.DrawSelectionIcon(C, FRand(-8, C.FixedScale), TextY *= FRand(0.5, TextYL), C.FixedScale, Alpha);
    }
    return;
}

defaultproperties
{
    LockIcon='Menu.MP.LockIcon'
    LockWidth=23
    LockHeight=25
    LockRegion=(X=25,Y=8,W=75,h=109)
    NewTextScale=0.7
    LockedTextColor=(R=70,G=70,B=70,A=0)
    NewTextColor=(R=255,G=0,B=0,A=0)
    NewTextOffset=7.5
}