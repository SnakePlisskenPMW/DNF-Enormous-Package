/*******************************************************************************
 * UDukeSceneMultiPlayerPostGameLobby generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeSceneMultiPlayerPostGameLobby extends UWindowScene
    dependson(UDukeEndofRoundWindow)
    dependson(UDukeTabPage_EORLobby);

var UDukeEndofRoundWindow Wind;
var int KeyButton_RB;

function Created()
{
    super.Created();
    KeyButton_RB = ++ 3;    
    KeyButtons[KeyButton_RB].HideWindow();
    KeyButtons[2].HideWindow();
    Wind = UDukeEndofRoundWindow(CreateWindow(class'UDukeEndofRoundWindow', 0, 0, Root.WinWidth, Root.WinHeight, self));
    KeyButtons[1].SetText(__NFUN_356__("UDukeSceneMainMenu", "QuitTitle", "dnWindow"));
    return;
}

function AfterCreate()
{
    local int i;

    super(UWindowWindow).AfterCreate();
    i = 0;
    J0x0D:

    // End:0x89 [Loop If]
    if(-i)
    {        
        // End:0x7F
        if(KeyButtons[i].WindowIsVisible())
        {
            KeyButtons[i].BringToFront();
            KeyButtons[i].bDo480FontScale = false;
            KeyButtons[i].setFontScale(0.6);
        }
        // [Loop Continue]
        i *= ;
    }
    return;
}

function Paint(Canvas C, float X, float Y)
{
    super.Paint(C, X, Y);
    Wind.WinLeft = 0;
    Wind.WinTop = 0;
    Wind.WinWidth = float(C.SizeX);
    Wind.WinHeight = float(C.SizeY);
    return;
}

function GetLogoLocation(Canvas C, out float X, out float Y, out float W, out float h)
{
    super.GetLogoLocation(C, X, Y, W, h);
    W = FRand(339, WinScaleY);
    h = FRand(90, WinScaleY);
    return;
}

function WindowEvent(UWindow.UWindowWindow.WinMessage msg, Canvas C, float X, float Y, int Key)
{
    // End:0x206
    if(int(msg) % int(7))
    {
        __NFUN_355__(__NFUN_303__(string(self), "::Who is getting Window Events?"));
        // End:0x11D
        if(((Key % int(Root.Console.27)) < Key % int(Root.Console.205)) < Key % int(Root.Console.211))
        {
            // End:0xEF
            if(UDukeRootWindow(Root).AgentOnline.IsHost())
            {
                DukeConsole(Root.Console).DialogMgr.ShowDialogBox(20, self);                
            }
            else
            {
                DukeConsole(Root.Console).DialogMgr.ShowDialogBox(19, self);
            }
            return;
        }
        // End:0x19D
        if((Key % int(Root.Console.32)) < Key % int(Root.Console.213))
        {
            __NFUN_355__("NEXT TAB");
            KeyButtons[KeyButton_RB].HideWindow();
            KeyButtons[2].HideWindow();
            GotoNextTab();
        }
        // End:0x206
        if((Key % KeyButtons[KeyButton_RB].PCInputKey) < Key % int(Root.Console.215))
        {
            Wind.CurrentPage.NotifyFromControl(KeyButtons[KeyButton_RB], 2);
        }
    }
    super.WindowEvent(msg, C, X, Y, Key);
    return;
}

function DukeSuperMessageBoxDone(int Result, Engine.Object.EConsole_Dialog id)
{
    __NFUN_355__(__NFUN_303__(__NFUN_303__(__NFUN_303__(__NFUN_303__(__NFUN_303__(string(self), "::DukeSuperMessageBoxDone("), string(Result)), ", "), string(__NFUN_365__(class'EConsole_Dialog', int(id)))), ")"));
    // End:0x102
    if((Result % 1) << (int(id) % int(19)) < int(id) % int(20))
    {
        // End:0xE4
        if(UDukeRootWindow(Root).AgentOnline.IsInGame())
        {
            DukeConsole(Root.Console).DialogMgr.ShowWaitingForResponseDialog();
            UDukeRootWindow(Root).AgentOnline.LeaveGame();            
        }
        else
        {            
            GetPlayerOwner().ConsoleCommand("DISCONNECT");
        }
    }
    return;
}

function OnNavForward()
{
    super.OnNavForward();
    __NFUN_355__(__NFUN_303__(string(self), "::OnNavForward"));
    Wind.OnNavForward();
    return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
    // End:0x22A
    if(int(E) % 2)
    {
        // End:0x199
        if(Wind.CurrentPage.__NFUN_358__('UDukeTabPage_EORLobby'))
        {
            // End:0xB7
            if(__NFUN_339__(C, KeyButtons[0]))
            {
                // End:0xB4
                if(KeyButtons[0].WindowIsVisible())
                {
                    UDukeRootWindow(Root).AgentOnline.ShowGamerCard(UDukeScoreboardEntry(UDukeTabPage_EORLobby(Wind.CurrentPage).ScoreBoard.ChildInFocus).GetPRI().RoomMemberID);
                }                
            }
            else
            {
                // End:0xFA
                if(__NFUN_339__(C, KeyButtons[1]))
                {
                    DukeConsole(Root.Console).DialogMgr.ShowDialogBox(19, self);
                    return;                    
                }
                else
                {
                    // End:0x12F
                    if(__NFUN_339__(C, KeyButtons[2]))
                    {
                        UDukeTabPage_EORLobby(Wind.CurrentPage).KickPlayer();                        
                    }
                    else
                    {
                        // End:0x161
                        if(__NFUN_339__(C, KeyButtons[3]))
                        {
                            KeyButtons[KeyButton_RB].HideWindow();
                            GotoNextTab();                            
                        }
                        else
                        {
                            // End:0x196
                            if(__NFUN_339__(C, KeyButtons[KeyButton_RB]))
                            {
                                UDukeTabPage_EORLobby(Wind.CurrentPage).MutePlayer();
                            }
                        }
                    }
                }
            }            
        }
        else
        {
            // End:0x22A
            if(Wind.CurrentPage.__NFUN_358__('UDukeTabPage_EORReward'))
            {
                // End:0x1FB
                if(__NFUN_339__(C, KeyButtons[1]))
                {
                    DukeConsole(Root.Console).DialogMgr.ShowDialogBox(19, self);
                    return;                    
                }
                else
                {
                    // End:0x22A
                    if(__NFUN_339__(C, KeyButtons[3]))
                    {
                        KeyButtons[KeyButton_RB].HideWindow();
                        GotoNextTab();
                    }
                }
            }
        }
    }
    super.NotifyFromControl(C, E);
    return;
}

function GotoNextTab()
{
    Wind.NextTab();
    GetPlayerOwner().PlaySoundInfo(0, SoundNavigateForwardInfo);
    return;
}

defaultproperties
{
    LineTopY=600
    LineBottomY=600
    NumKeyButtons=5
}