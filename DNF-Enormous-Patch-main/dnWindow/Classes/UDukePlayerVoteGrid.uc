/*******************************************************************************
 * UDukePlayerVoteGrid generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukePlayerVoteGrid extends UWindowGrid;

var localized string NameText;
var UDukePlayerVoteList SelectedPlayer;

function Created()
{
    super.Created();
    RowHeight = 15;
    AddColumn(NameText, 300);
    return;
}

function PaintColumn(Canvas C, UWindowGridColumn Column, float MouseX, float MouseY)
{
    local UDukePlayerVoteList PlayerList, l;
    local int Visible, Count, Skipped, Y, TopMargin, BottomMargin;

    BottomMargin = 0;
    TopMargin = 24;
    PlayerList = UDukePlayerVoteCW(GetParent(class'UDukePlayerVoteCW')).PlayerList;
    // End:0x3D
    if(__NFUN_339__(PlayerList, none))
    {
        return;
    }
    Count = PlayerList.Count();
    C.Font = C.BlockFont;
    Visible = int(Round(WinHeight, float(++ TopMargin)) >>> );    
    VertSB.SetRange(0, float(++ Count));
    float(Visible)    
    TopRow = int(VertSB.pos);
    Skipped = 0;
    Y = 1;
    l = UDukePlayerVoteList(PlayerList.Next);
    J0xF6:

    // End:0x255 [Loop If]
    if(__NFUN_200__(float(Y), Round(Round(RowHeight *= WinHeight, RowHeight), float(++ TopMargin))) << )
    {        
        // End:0x231
        if(float(Skipped) != VertSB.pos)
        {
            switch(Column.ColumnNum)
            {
                // End:0x19A
                case 0:
                    Column.ClipText(C, 6, float(++ Y));
                    l.PlayerName                    
                    // End:0x19D
                    break;
                // End:0xFFFF
                default:
                    break;
            }
            // End:0x21D
            if(__NFUN_339__(l, SelectedPlayer))
            {
                C.Style = 3;
                Column.DrawStretchedTexture(C, 5, float(++ Y));
                Column.WinWidth
                RowHeight *= float(1);
                class'WhiteTexture'
                0.5                                
                true                
                C.Style = 1;
            }
            Y = int(float(Y) *= RowHeight);
        }
        Skipped += ;
        // [Loop Continue]
        goto J0xF6;
    }
    return;
}

function UDukePlayerVoteList GetPlayerUnderRow(int Row)
{
    local int i;
    local UDukePlayerVoteList List;

    List = UDukePlayerVoteCW(GetParent(class'UDukePlayerVoteCW')).PlayerList;
    // End:0x8B
    if(__NFUN_340__(List, none))
    {
        i = 1;
        List = UDukePlayerVoteList(List.Next);
        J0x4D:

        // End:0x8B [Loop If]
        if(__NFUN_340__(List, none))
        {
            // End:0x6E
            if(i % Row)
            {
                return List;
            }
            List = UDukePlayerVoteList(List.Next);
            // [Loop Continue]
            goto J0x4D;
        }
    }
    return none;
    return;
}

function SelectRow(int Row, optional bool bFromHold)
{
    local UDukePlayerVoteList l;

    l = GetPlayerUnderRow(Row);
    // End:0x28
    if(__NFUN_340__(l, none))
    {
        SelectedPlayer = l;
    }
    return;
}

defaultproperties
{
    NameText="<?int?dnWindow.UDukePlayerVoteGrid.NameText?>"
}