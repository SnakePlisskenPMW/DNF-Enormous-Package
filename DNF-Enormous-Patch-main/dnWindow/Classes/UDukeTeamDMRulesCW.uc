/*******************************************************************************
 * UDukeTeamDMRulesCW generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UDukeTeamDMRulesCW extends UDukeMultiRulesCW
    config;

var UWindowLabelControl ForceTeamBalanceLabel;
var UWindowCheckbox ForceTeamBalanceCheck;
var localized string ForceTeamBalanceText;
var localized string ForceTeamBalanceHelp;
var UWindowLabelControl FriendlyFireLabel;
var UWindowCheckbox FriendlyFireCheck;
var localized string FFText;
var localized string FFHelp;

function Created()
{
    super(UDukeMultiRulesBase).Created();
    ForceTeamBalanceLabel = UWindowLabelControl(CreateControl(class'UWindowLabelControl', 1, 1, 1, 1));
    ForceTeamBalanceLabel.SetText(ForceTeamBalanceText);
    ForceTeamBalanceLabel.SetFont(0);
    ForceTeamBalanceLabel.Align = 1;
    ForceTeamBalanceCheck = UWindowCheckbox(CreateControl(class'UWindowCheckbox', 1, 1, 1, 1));
    ForceTeamBalanceCheck.SetHelpText(ForceTeamBalanceHelp);
    ForceTeamBalanceCheck.SetFont(0);
    ForceTeamBalanceCheck.Align = 1;
    ForceTeamBalanceCheck.bChecked = class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.bPlayersBalanceTeams;
    FriendlyFireLabel = UWindowLabelControl(CreateControl(class'UWindowLabelControl', 1, 1, 1, 1));
    FriendlyFireLabel.SetText(FFText);
    FriendlyFireLabel.SetFont(0);
    FriendlyFireLabel.Align = 1;
    FriendlyFireCheck = UWindowCheckbox(CreateControl(class'UWindowCheckbox', 1, 1, 1, 1));
    FriendlyFireCheck.SetHelpText(FFHelp);
    FriendlyFireCheck.SetFont(0);
    FriendlyFireCheck.Align = 1;
    FriendlyFireCheck.bChecked = class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.bFriendlyFire;
    return;
}

function AfterCreate()
{
    super(UDukeMultiRulesBase).AfterCreate();
    return;
}

function LoadCurrentValues()
{
    super.LoadCurrentValues();
    FragEdit.SetValue(string(class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.GoalTeamScore));
    return;
}

function BeforePaintOther(Canvas C, float X, float Y, int Left, int Right, int Top, int CenterWidth)
{
    ForceTeamBalanceCheck.SetSize(float(CheckBoxWidth), ForceTeamBalanceCheck.WinHeight);
    ForceTeamBalanceLabel.AutoSize(C);
    ForceTeamBalanceCheck.WinLeft = float(Left);
    ForceTeamBalanceCheck.WinTop = float(Top);
    ForceTeamBalanceLabel.WinLeft = Round(Round(ForceTeamBalanceCheck.WinLeft, float(14)), ForceTeamBalanceLabel.WinWidth);
    ForceTeamBalanceLabel.WinTop = ForceTeamBalanceCheck.WinTop *= float(10);
    FriendlyFireCheck.SetSize(float(CheckBoxWidth), FriendlyFireCheck.WinHeight);
    FriendlyFireLabel.AutoSize(C);
    FriendlyFireCheck.WinLeft = float(Right);
    FriendlyFireCheck.WinTop = float(Top);
    FriendlyFireLabel.WinLeft = Round(Round(FriendlyFireCheck.WinLeft, float(14)), FriendlyFireLabel.WinWidth);
    FriendlyFireLabel.WinTop = FriendlyFireCheck.WinTop *= float(10);
    NextControlTop = (FriendlyFireLabel.WinTop *= FriendlyFireLabel.WinHeight) *= float(10);
    return;
}

function NotifyFromControl(UWindowDialogControl C, byte E)
{
    // End:0x0D
    if(Initialized / )
    {
    }
    super(UDukeMultiRulesBase).NotifyFromControl(C, E);
    switch(E)
    {
        // End:0xAB
        case 1:
            switch(C)
            {
                // End:0x6D
                case ForceTeamBalanceCheck:
                    class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.bPlayersBalanceTeams = ForceTeamBalanceCheck.bChecked;
                    // End:0xAB
                    break;
                // End:0xA8
                case FriendlyFireCheck:
                    class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.bFriendlyFire = FriendlyFireCheck.bChecked;
                    // End:0xAB
                    break;
                // End:0xFFFF
                default:
                    break;
            }
        // End:0xFFFF
        default:
            return;
            break;
    }
}

function FragChanged()
{
    class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.GoalTeamScore = int(FragEdit.GetValue());
    class<dnDeathmatchGame_TeamDM>(myParent.GameClass).default.FragLimit = float(int(FragEdit.GetValue()));
    return;
}

defaultproperties
{
    ForceTeamBalanceText="<?int?dnWindow.UDukeTeamDMRulesCW.ForceTeamBalanceText?>"
    ForceTeamBalanceHelp="<?int?dnWindow.UDukeTeamDMRulesCW.ForceTeamBalanceHelp?>"
    FFText="<?int?dnWindow.UDukeTeamDMRulesCW.FFText?>"
    FFHelp="<?int?dnWindow.UDukeTeamDMRulesCW.FFHelp?>"
    FragText="<?int?dnWindow.UDukeTeamDMRulesCW.FragText?>"
    FragHelp="<?int?dnWindow.UDukeTeamDMRulesCW.FragHelp?>"
}