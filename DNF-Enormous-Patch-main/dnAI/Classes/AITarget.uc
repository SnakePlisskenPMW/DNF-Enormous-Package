/*******************************************************************************
 * AITarget generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class AITarget extends Object
    native;

var private AIActor AIOwner;
var private int TargetActorIndex;
var private float ClearTargetTime;
var private float VisibilityTestInterval;
var private bool TrackVisually;
var private bool TrackAurally;
var private bool ForceTargetUpdate;
var private bool AllowClear;
var private transient float VisibilityTestGate;
var private bool ValidTarget;
var private bool TargetIsActor;
var private Vector Posn;
var private Vector BodyPosn;
var private Vector EyePosn;
var private Rotator Rotn;
var private Vector Vel;
var private float LastSeenTime;
var private float LastHeardTime;
var private float LastContactTime;
var private float VisibleSinceTime;
var private bool StoredValidTarget;
var private bool StoredTargetIsActor;
var private Vector StoredPos;
var private Vector StoredBodyPosn;
var private Vector StoredEyePosn;
var private Rotator StoredRotn;
var private Vector StoredVel;
var private float StoredSpeed;
var private transient float StoredLastSeenTime;
var private transient float StoredLastHeardTime;
var private transient float StoredLastContactTime;
var private Vector Disp;
var private transient int DispFrame;
var private Vector Disp2D;
var private transient int Disp2DFrame;
var private float Dist3D;
var private transient int Dist3DFrame;
var private float Dist2D;
var private transient int Dist2DFrame;
var private float Range2D;
var private transient int Range2DFrame;
var private Vector DirTo;
var private transient int DirToFrame;
var private Vector Dir2DTo;
var private transient int Dir2DToFrame;
var private float AimFromAngle;
var private transient int AimFromAngleFrame;

// Export UAITarget::execInitialise(FFrame&, void* const)
native function Initialise(AIActor MyOwner, float ClearTime, float VisibilityInterval, bool Visual, bool Aural);

// Export UAITarget::execTickNative(FFrame&, void* const)
native function TickNative(float Secs, bool ForceVisTest);

// Export UAITarget::execSetTargetActor(FFrame&, void* const)
native function SetTargetActor(Actor TargetActor, bool AllowClear, bool Sighted);

// Export UAITarget::execSetTargetPos(FFrame&, void* const)
native function SetTargetPos(Vector TargetPos, Rotator TargetRotation);

// Export UAITarget::execSetClearTime(FFrame&, void* const)
native function SetClearTime(float ClearTime);

// Export UAITarget::execSetVisibilityInterval(FFrame&, void* const)
native function SetVisibilityInterval(float VisInt);

// Export UAITarget::execHeardSound(FFrame&, void* const)
native function HeardSound(Actor NoisyActor);

// Export UAITarget::execClearTarget(FFrame&, void* const)
native function ClearTarget();

// Export UAITarget::execForceContactUpdate(FFrame&, void* const)
native function ForceContactUpdate();

// Export UAITarget::execIsValidTarget(FFrame&, void* const)
native function bool IsValidTarget();

// Export UAITarget::execIsAnActor(FFrame&, void* const)
native function bool IsAnActor();

// Export UAITarget::execIsAllowedToClear(FFrame&, void* const)
native function bool IsAllowedToClear();

// Export UAITarget::execGetActor(FFrame&, void* const)
native function Actor GetActor();

// Export UAITarget::execGetPos(FFrame&, void* const)
native function Vector GetPos();

// Export UAITarget::execGetBodyPos(FFrame&, void* const)
native function Vector GetBodyPos();

// Export UAITarget::execGetRotn(FFrame&, void* const)
native function Rotator GetRotn();

// Export UAITarget::execGetEyePos(FFrame&, void* const)
native function Vector GetEyePos();

// Export UAITarget::execGetAimPos(FFrame&, void* const)
native function Vector GetAimPos();

// Export UAITarget::execGetVel(FFrame&, void* const)
native function Vector GetVel();

// Export UAITarget::execGetTimeSinceSeen(FFrame&, void* const)
native function float GetTimeSinceSeen();

// Export UAITarget::execGetTimeSinceHeard(FFrame&, void* const)
native function float GetTimeSinceHeard();

// Export UAITarget::execGetTimeSinceContact(FFrame&, void* const)
native function float GetTimeSinceContact();

// Export UAITarget::execGetTimeVisible(FFrame&, void* const)
native function float GetTimeVisible();

// Export UAITarget::execGetDisp(FFrame&, void* const)
native function Vector GetDisp();

// Export UAITarget::execGetDisp2D(FFrame&, void* const)
native function Vector GetDisp2D();

// Export UAITarget::execGetDist(FFrame&, void* const)
native function float GetDist();

// Export UAITarget::execGetDist2D(FFrame&, void* const)
native function float GetDist2D();

// Export UAITarget::execGetRange2D(FFrame&, void* const)
native function float GetRange2D();

// Export UAITarget::execGetDirTo(FFrame&, void* const)
native function Vector GetDirTo();

// Export UAITarget::execGetDir2DTo(FFrame&, void* const)
native function Vector GetDir2DTo();

// Export UAITarget::execGetAimFromAngle(FFrame&, void* const)
native function float GetAimFromAngle();
