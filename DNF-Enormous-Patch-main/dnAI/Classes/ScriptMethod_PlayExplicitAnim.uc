/*******************************************************************************
 * ScriptMethod_PlayExplicitAnim generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ScriptMethod_PlayExplicitAnim extends ScriptMethod
    native
    exportstructs
    hidecategories(Object);

cpptext
{
// Stripped
}

var() noexport Engine.BaseAI.EAIAnimXType AnimType "Type of behaviour for animation.";
var() noexport anim name SequenceName "Animation sequence to play.";
var() noexport name ChannelName "Channel to play the anim on.";
var() noexport float Rate "Animation rate. (1.0 is normal speed)";
var() noexport float Tween "Tween time.";
var() noexport bool Loop "Should this animation loop?";
var() noexport float StartFrame "Start the animation at this frame.";
var() noexport float AnimEarlyEndTime "Early end time.";
var() noexport float BlendInTime "How long to blend in over.";
var() noexport float BlendOutTime "How long to blend out over.";
var() noexport bool AdjustStart "Adjust start to begin on next frame?";
var() noexport float ExitTime "Duration to play animation for.  Set to <= 0.0 to play one animation cycle.";
var() noexport bool Infinite "If true, this idle will loop forever.";
var() noexport deprecated name FaceActorTag "Optional actor to face during animation.";
var() noexport Vector FacePos "Optional position to face during animation.";
var() noexport bool bDisableWalkingIK "if true, we will disable walking IK for the the animation, and then restore it";
var() noexport bool bForceAnimTick "if ture, we will force tick the mesh instance after this animation has been started.";
var() noexport bool bForceRestart "if true, we will force a rstart if this animation is already playing.";
var() noexport bool bClearLookTarget "if true, we will force clear our look target when starting this animation.";
var() noexport bool bSuspendLookTargetEval "if true, we will suspend look target evaluation for the duration of this method.";
var() noexport bool bDisableBlinking "if true, automatic blinking will be disabled for the duration of this animation.";

event string GetMethodString()
{
    return __NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__(__NFUN_302__("PlayExplicitAnim (", string(__NFUN_365__(class'EAIAnimXType', int(AnimType)))), ", "), string(SequenceName)), ", "), string(ChannelName)), ", "), string(Rate)), ", "), string(Tween)), ", "), string(Loop)), ", "), string(StartFrame)), ", "), string(AnimEarlyEndTime)), ", "), string(BlendInTime)), ", "), string(BlendOutTime)), ", "), string(AdjustStart)), ", "), string(ExitTime)), ", "), string(Infinite)), ", "), string(FaceActorTag)), ", ("), string(FacePos)), ")"), ")");
    return;
}

function EnumerateRawAnimationSequences(out array<SAnimationEnumeration> References, Mesh Mesh)
{
    AddAnimationEnumeration(References, SequenceName, Mesh);
    return;
}

defaultproperties
{
    AnimType=1
    SequenceName=aigen_a_normal_idle01
    ChannelName=Bottom
    Rate=1
    bForceRestart=true
    Latent=true
}