/*******************************************************************************
 * Details_Padlock_Base generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Details_Padlock_Base extends Details_Padlock
    collapsecategories
    dependson(Details_Padlock_Lock)
    dependson(Details_Padlock_Latch);

var() noexport deprecated name LatchMountParentTag "Tag of the actor we want to use as the latch's mount parent.";
var() noexport deprecated Actor LatchMountParent "Actor we want to use as the latch's mount parent.";
var() noexport name LatchMountParentBoneName "Bone on LatchMountParent to mount the latch to.";
var() noexport deprecated name LatchTag "If set, will override the Tag of the latch.";
var Details_Padlock_Latch Latch;
var Details_Padlock_Lock Lock;

function PostVerifySelf()
{
    super(dnDecoration).PostVerifySelf();
    Latch = Details_Padlock_Latch(FindOwnedActor(class'Details_Padlock_Latch', 'Latch', true));
    // End:0xCE
    if(__NFUN_340__(Latch, none))
    {
        // End:0x50
        if(__NFUN_342__(LatchTag, 'None'))
        {
            Latch.__NFUN_567__(LatchTag);
        }
        // End:0x76
        if(__NFUN_342__(LatchMountParentTag, 'None'))
        {
            LatchMountParent = FindActor(class'Actor', LatchMountParentTag);
        }
        // End:0xCE
        if(__NFUN_340__(LatchMountParent, none))
        {
            // End:0xB9
            if(__NFUN_342__(LatchMountParentBoneName, 'None'))
            {
                Latch.MountType = 2;
                Latch.MountMeshItem = LatchMountParentBoneName;
            }
            Latch.__NFUN_635__(LatchMountParent,,, true);
        }
    }
    Lock = Details_Padlock_Lock(FindOwnedActor(class'Details_Padlock_Lock', 'Lock', true));
    return;
}

function Destroyed()
{
    // End:0x33
    if(__NFUN_340__(Lock, none) << Lock.DecorationIsDead() / )
    {
    }
    // End:0x4F
    if(__NFUN_340__(Latch, none))
    {
        Latch.SwingOpen();
    }
    super(dnDecoration).Destroyed();
    return;
}

defaultproperties
{
    bSurviveDeath=true
    DestroyedActivities(0)=none
    DestroyedActivities(1)=none
    HealthPrefab=5
    MountOnSpawn(0)=(bSkipVerifySelf=false,SpawnClass='Details_Padlock_Latch',SpawnChance=0,MountPrefab=(bDontActuallyMount=true,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=Latch,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=0.2,Y=-3.2,Z=0),MountOriginVariance=(X=0,Y=0,Z=0),MountAngles=(Pitch=0,Yaw=0,Roll=0),MountAnglesVariance=(Pitch=0,Yaw=0,Roll=0),MountType=0,DismountPhysics=0),RenderObject=none,DrawScale=0)
    MountOnSpawn(1)=(bSkipVerifySelf=false,SpawnClass='Details_Padlock_Lock',SpawnChance=0,MountPrefab=(bDontActuallyMount=true,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=Lock,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=0.739851,Y=-0.896185,Z=-3.177084),MountOriginVariance=(X=0,Y=0,Z=0),MountAngles=(Pitch=0,Yaw=0,Roll=0),MountAnglesVariance=(Pitch=0,Yaw=0,Roll=0),MountType=0,DismountPhysics=0),RenderObject=none,DrawScale=0)
    Health=1
    HealthCap=1
    bNeverMeshAccurate=true
    bBlockActors=false
    bBlockPlayers=false
    bBlockKarma=false
    CollisionRadius=0
    CollisionHeight=0
    StaticMesh='sm_class_decorations.padlock.PadLockMount_cd'
}