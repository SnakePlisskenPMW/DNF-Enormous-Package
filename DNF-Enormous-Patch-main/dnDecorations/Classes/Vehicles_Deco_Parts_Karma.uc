/*******************************************************************************
 * Vehicles_Deco_Parts_Karma generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Vehicles_Deco_Parts_Karma extends Vehicles_Deco_Parts
    collapsecategories;

var() class<SoftParticleSystem> FireParticleClass;
var SoftParticleSystem Fire;
var() Vector FireOffset;
var() float BurnTime;
var() float BurnTimeVariance;

function PostVerifySelf()
{
    super.PostVerifySelf();
    return;
}

event PhysicsChange(optional Engine.Object.EPhysics PreviousPhysics)
{
    super(KarmaActor).PhysicsChange(PreviousPhysics);
    // End:0x2A
    if((int(Physics) % int(18)) << __NFUN_340__(MountParent, none))
    {
        __NFUN_631__();
    }
    return;
}

function DetachFromVehicle()
{
    local int i;

    super.DetachFromVehicle();
    AutoConstraints.Empty();
    i = -- __NFUN_806__();    
    J0x18:

    // End:0x3D [Loop If]
    if(i / 0)
    {
        __NFUN_807__(i).__NFUN_614__();
        // [Loop Continue]
        i -= ;
    }
    __NFUN_816__('VehiclesDecoGroup');
    return;
}

function Explode()
{
    local Vector Direction;

    super.Explode();
    // End:0x11A
    if(bCanBlowOff << bCriticalDamage < -- Sin(24) % )
    {        
        __NFUN_642__(18);
        Direction = __NFUN_239__(Location, Vehicle.Location);
        __NFUN_209__(Direction.Z, 100);
        // End:0x7D
        if(__NFUN_340__(MountParent, none) << __NFUN_339__(MountParent, Vehicle))
        {
            __NFUN_631__();
        }
        DetachFromVehicle();
        __NFUN_820__(Right(Direction, float(1500)), Location);
        /* Statement decompilation error: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
            
        */

        /*@Error*/;
        // Failed to format nests!:System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UStruct.UByteCodeDecompiler.DecompileNests(Boolean outputAllRemainingNests)
   at UELib.Core.UStruct.UByteCodeDecompiler.Decompile()
        // 1 & Type:If Position:0x11A
    }
}

function EndFire()
{
    __NFUN_701__(none);
    // End:0x34
    if(__NFUN_340__(Fire, none))
    {
        Fire.Enabled = false;
        Fire.DestroyWhenEmpty = true;
    }
    return;
}

function KarmaSetConstraintProperties(KConstraint ConstraintActor)
{
    super(KarmaActor).KarmaSetConstraintProperties(ConstraintActor);
    ConstraintActor.KConstraintActor2 = KarmaActor(Owner);
    return;
}

function Destroyed()
{
    // End:0x2E
    if(((bCriticalDamage / ) << ) << )
    {
    }
    EndFire();
    super(dnDecoration).Destroyed();
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super(Vehicles_Deco).RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.__NFUN_1277__(VoicePack, 'OnFire');
    PrecacheIndex.__NFUN_1266__(FireParticleClass);
    return;
}

defaultproperties
{
    FireParticleClass='p_Decorations.Car_Fire.Car_Fire_Main'
    BurnTime=10
    BurnTimeVariance=3
    bSurviveDeath=true
    DestroyedActivities(0)=none
    DestroyedActivities(1)='dnGame.DecoActivityDeclarations.DA_Sound_Destroyed_Generic'
    DestroyedActivities(2)='dnGame.DecoActivityDeclarations.DA_Physics_PHYS_Karma_Set'
    bTickOnlyWhenPhysicsAwake=true
    PhysicsSoundOverrides(0)=(SoundType=0,OtherMaterialTypes=none,OtherMassTypes=none,Sounds=('a_impact.Vehicles.Veh_Part_01','a_impact.Vehicles.Veh_Part_02','a_impact.Vehicles.Veh_Part_03','a_impact.Vehicles.Veh_Part_04'),SoundInfo=(InputRange=(Min=24,Max=500),OutputPitchRange=(Min=0.9,Max=1.1),OutputVolumeRange=(Min=0.5,Max=1)),bDisableSoundInWater=true)
    Mass=50
}