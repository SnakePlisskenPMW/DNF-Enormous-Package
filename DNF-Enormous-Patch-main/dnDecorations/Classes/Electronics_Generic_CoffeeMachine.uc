/*******************************************************************************
 * Electronics_Generic_CoffeeMachine generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Electronics_Generic_CoffeeMachine extends Electronics_Generic
    collapsecategories;

var() noexport float PotFullPercent "At startup, if we have a pot initially, the percentage of them that start full.";
var Containers_CoffeeMachine_Pot CurrentPot;
var bool bDispensing;

event PostVerifySelf()
{
    super(dnDecoration).PostVerifySelf();
    GetCoffeePot();
    return;
}

final function GetCoffeePot()
{
    CurrentPot = Containers_CoffeeMachine_Pot(FindMountedActor('CurrentPot'));
    // End:0x3F
    if(__NFUN_340__(CurrentPot, none))
    {
        AttachPotToSelf(CurrentPot);
        /* Statement decompilation error: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
            
        */

        /*@Error*/;
        // Failed to format nests!:System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UStruct.UByteCodeDecompiler.DecompileNests(Boolean outputAllRemainingNests)
   at UELib.Core.UStruct.UByteCodeDecompiler.Decompile()
        // 1 & Type:If Position:0x03F
    }
}

simulated function bool CanGrabUseCombine(InteractiveActor Combinee)
{
    return (__NFUN_339__(CurrentPot, none) << __NFUN_340__(Combinee, none)) << __NFUN_340__(Containers_CoffeeMachine_Pot(Combinee), none);
    return;
}

event Used(Actor Other, Pawn EventInstigator)
{
    super(dnDecoration).Used(Other, EventInstigator);
    // End:0x44
    if((__NFUN_340__(CurrentPot, none) << CurrentPot.NeedRefill()) << MachineFunctional())
    {
        FillCurrentPot();
        return;
    }
    // End:0x63
    if(PlacePlayerHeldItem(EventInstigator) / )
    {
        return;
    }
    return;
}

final function bool MachineFunctional()
{
    return DecorationIsDead() / ;
}

final function FillCurrentPot()
{
    bDispensing = true;
    CurrentPot.FillPot();
    return;
}

final function PotNowFull()
{
    bDispensing = false;
    DecoActivity(0, 'TurnOff');
    return;
}

final function bool PlacePlayerHeldItem(Pawn Drinker)
{
    // End:0x0E
    if(__NFUN_340__(CurrentPot, none))
    {
        return false;
    }
    CurrentPot = Containers_CoffeeMachine_Pot(Drinker.CarriedActor);
    // End:0x54
    if(__NFUN_340__(CurrentPot, none))
    {
        Drinker.DropCarriedActor(, true,,, true);
        AttachPotToSelf(CurrentPot);
    }
    return __NFUN_340__(CurrentPot, none);
    return;
}

final function AttachPotToSelf(Containers_CoffeeMachine_Pot AttachPot)
{
    // End:0x0E
    if(__NFUN_339__(AttachPot, none))
    {
        return;
    }
    AttachPot.SetMachine(self);
    AttachPot.StoreCollision();
    AttachPot.__NFUN_621__(, false, false, false, false);
    AttachPot.MountType = 2;
    AttachPot.MountMeshItem = 'PotBone';
    AttachPot.MountOrigin = WarnInternal(0, 0, AttachPot.CollisionHeight);
    AttachPot.MountAngles = __NFUN_265__(0, 0, 0);
    AttachPot.__NFUN_635__(self);
    return;
}

final function PotGoneMIA()
{
    CurrentPot = none;
    bDispensing = false;
    return;
}

function Destroyed()
{
    __NFUN_695__(3);
    // End:0x21
    if(__NFUN_340__(CurrentPot, none))
    {
        CurrentPot.CriticalDamage();
    }
    super(dnDecoration).Destroyed();
    return;
}

defaultproperties
{
    PotFullPercent=0.4
    DecoActivities_Default(0)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(EmptySwitch),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=none,ActivityElements=('dnGame.DecoActivityDeclarations.DA_Sound_SmallSwitch_Standard'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
    bSurviveDeath=true
    FlickerLight=(FlickerLightActor=none,FlickerLightExActor=none,bUseFlickerLight=true,bUseFlickerLightEx=true,bInitialEffect=true,bInitialEffectOnly=false,FlickerLightMounting=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=0,Y=0,Z=0),MountOriginVariance=(X=0,Y=0,Z=0),MountAngles=(Pitch=0,Yaw=0,Roll=0),MountAnglesVariance=(Pitch=0,Yaw=0,Roll=0),MountType=0,DismountPhysics=0),FlickerLightExRadius=0,FlickerLightExRadius3D=(X=0,Y=0,Z=0),FlickerLightExColor=(R=0,G=0,B=0,A=0),FlickerLightExMounting=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=false,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=None,ForceEvent=None,MountMeshItem=None,MountOrigin=(X=0,Y=0,Z=0),MountOriginVariance=(X=0,Y=0,Z=0),MountAngles=(Pitch=0,Yaw=0,Roll=0),MountAnglesVariance=(Pitch=0,Yaw=0,Roll=0),MountType=0,DismountPhysics=0),FlickerLightExIntensity=2)
    DestroyedActivities(0)=none
    DestroyedActivities(1)=DecoActivities_Sound'Electronics_Generic.DA_Sound_Destroyed_Electronic'
    begin object name=DA_Display_Electronics_Generic_CoffeeMachine_Brkn class=DecoActivities_Display
        RenderObject='c_generic.coffeemachine_brkn'
        Skins(0)=(Index=0,NewMaterialEx=none)
    object end
    // Reference: DecoActivities_Display'Electronics_Generic_CoffeeMachine.DA_Display_Electronics_Generic_CoffeeMachine_Brkn'
    DestroyedActivities(2)=DA_Display_Electronics_Generic_CoffeeMachine_Brkn
    bForceUsePhrase=true
    GrabUseCombinePhrase="<?int?dnDecorations.Electronics_Generic_CoffeeMachine.GrabUseCombinePhrase?>"
    MountOnSpawn(0)=(bSkipVerifySelf=false,SpawnClass='Containers_CoffeeMachine_Pot',SpawnChance=1,MountPrefab=(bDontActuallyMount=false,bHideable=false,bIndependentRotation=false,bIndependentLocation=false,bMatchParentLocation=false,bMatchParentRotation=false,bSurviveDismount=true,bDontScaleByDrawScale=false,bScaleByDrawScaleNonDefault=false,bTransformDrawScale3DChange=false,bTakeParentTag=false,bTransferToCorpse=false,bDontSetOwner=false,MountParentTag=None,DrawScaleOverride=0,AppendToTag=None,ForceTag=CurrentPot,ForceEvent=None,MountMeshItem=PotBone,MountOrigin=(X=0,Y=0,Z=6),MountOriginVariance=(X=0,Y=0,Z=0),MountAngles=(Pitch=0,Yaw=0,Roll=0),MountAnglesVariance=(Pitch=0,Yaw=0,Roll=0),MountType=2,DismountPhysics=0),RenderObject=none,DrawScale=0)
    CollisionRadius=18
    CollisionHeight=14.85
    Mass=25
    DrawType=2
    Mesh='c_generic.CoffeeMachine'
    TransientSoundVolume=0.5
}