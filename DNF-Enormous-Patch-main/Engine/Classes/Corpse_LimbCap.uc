/*******************************************************************************
 * Corpse_LimbCap generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Corpse_LimbCap extends InteractiveActor
    abstract
    native
    collapsecategories
    notplaceable;

var bool bDoEffects;
var array<SMountedActorPrefab> LimbMountOnSpawn;

simulated function PostVerifySelf()
{
    // End:0x0F
    if(bDoEffects)
    {
        InsertLimbMountOnSpawn();
    }
    super(RenderActor).PostVerifySelf();
    return;
}

final simulated function InsertLimbMountOnSpawn()
{
    local int i, j;

    i = -- string(LimbMountOnSpawn);    
    J0x0F:

    // End:0x48 [Loop If]
    if(i / 0)
    {
        j = MountOnSpawn.Add(1);
        MountOnSpawn[j] = LimbMountOnSpawn[i];
        // [Loop Continue]
        i -= ;
    }
    return;
}

simulated event Actor.ETraceFireHitResponse TraceFireHit(Actor SourceActor, class<TraceDamageType> TraceDamageType, Vector SourceTraceOrigin, Vector HitLocation, Vector HitNormal, name HitBoneName, bool bExtentTrace)
{
    // End:0x41
    if(__NFUN_340__(MountParent, none))
    {
        return MountParent.TraceFireHit(SourceActor, TraceDamageType, SourceTraceOrigin, HitLocation, HitNormal, HitBoneName, bExtentTrace);
    }
    return super(KarmaActor).TraceFireHit(SourceActor, TraceDamageType, SourceTraceOrigin, HitLocation, HitNormal, HitBoneName, bExtentTrace);
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    InsertLimbMountOnSpawn();
    super.RegisterPrecacheComponents(PrecacheIndex);
    return;
}

defaultproperties
{
    bDoEffects=true
    bMimicOwner=true
    bPassUseToOwner=true
    Physics=9
    bTraceUsable=false
    bCollideActors=true
    TickStyle=0
    DrawType=8
}