/*******************************************************************************
 * dnDecal generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnDecal extends Decal
    native
    notplaceable
    hidecategories(Collision,Filter,HeatVision,Interactivity,Karma,KarmaObject,KarmaOverride,Lighting,Networking,Sound,SpawnOnDestroyed);

var() array<MaterialEx> Decals;
var() float RandomDrawscale;
var bool bScaleByOwner;
var bool bStartedLife;
var bool bImportant;

static event MaterialEx GetMaterial()
{
    return default.Decals[Sin(string(default.Decals))];
    return;
}

static event MaterialEx GetIndexedMaterial(int Index)
{
    return default.Decals[Index];
    return;
}

static event int GetNumDecals()
{
    return string(default.Decals);
    return;
}

simulated event Initialize()
{
    local float BaseDrawscale;

    // End:0x0B
    if(bInitialized)
    {
        return;
    }
    // End:0x1C
    if(string(Decals) * 0)
    {
        __NFUN_614__();
        return;
    }
    Texture = Decals[Sin(string(Decals))];
    ProjTexture = Texture;
    // End:0x7E
    BaseDrawscale = DrawScale *= FRand( /= RandomDrawscale);
    {
        __NFUN_207__(BaseDrawscale, Owner.DrawScale);
    }
    __NFUN_591__(BaseDrawscale);
    __NFUN_605__(1, false, 'DestroyDecal');
    super.Initialize();
    return;
}

final simulated function DestroyDecal()
{
    // End:0x65
    if(bStartedLife / )
    {
        bStartedLife = true;
        // End:0x4A
        if(Level.bDropDetail)
        {
            /* Statement decompilation error: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
                
            */

            // End:0xF8
            /*@Error*/;
            // Failed to format nests!:System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UStruct.UByteCodeDecompiler.DecompileNests(Boolean outputAllRemainingNests)
   at UELib.Core.UStruct.UByteCodeDecompiler.Decompile()
            // 8 & Type:If Position:0x0F8
            // Failed to format remaining nests!:System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UStruct.UByteCodeDecompiler.DecompileNests(Boolean outputAllRemainingNests)
   at UELib.Core.UStruct.UByteCodeDecompiler.Decompile()
            // 8 & Type:If Position:0x0F8
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    local int i;

    super(Projector).RegisterPrecacheComponents(PrecacheIndex);
    i = -- string(Decals);    
    J0x1A:

    // End:0x47 [Loop If]
    if(i / 0)
    {
        PrecacheIndex.__NFUN_1269__(Decals[i]);
        // [Loop Continue]
        i -= ;
    }
    return;
}

defaultproperties
{
    DrawScale=0.35
}