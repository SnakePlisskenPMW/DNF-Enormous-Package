/*******************************************************************************
 * KLinearJointLimit generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KLinearJointLimit extends KAffector
    native
    collapsecategories
    notplaceable
    hidecategories(Collision,HeatVision,Interactivity,Karma,KarmaCollision);

cpptext
{
// Stripped
}

enum ELinearJointAxisMode
{
    LINJAXIS_Absolute,
    LINJAXIS_Implicit,
    LINJAXIS_Relative
};

var(KAffector) const noexport KLinearJointLimit.ELinearJointAxisMode AxisMode "Should the rotation of this actor determine a constant (independent of the actors) direction (\"absolute\"), relative to the first actor (\"relative\"), or only be used to set up a starting state between the two bodies (\"implicit\")?";
var(KAffector) const noexport float MinimumDistance "In non-implicit mode: the minimum distance between the two constrained objects that will be allowed." "" "In implicit: the minimum point along the limit's axis that the body can be.";
var(KAffector) const noexport float MaximumDistance "In non-implicit mode: the maximum distance that the two constrained objects will be allowed to move apart." "" "In implicit: the farthest point along the axis the body can move to.";

// Export UKLinearJointLimit::execSetAxisMode(FFrame&, void* const)
native(1108) final function SetAxisMode(KLinearJointLimit.ELinearJointAxisMode NewAxisMode);

// Export UKLinearJointLimit::execSetDistanceRange(FFrame&, void* const)
native(1109) final function SetDistanceRange(optional float NewMinimumDistance, optional float NewMaximumDistance);

defaultproperties
{
    AxisMode=1
}