/*******************************************************************************
 * ConeBuilder generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ConeBuilder extends BrushBuilder;

var() float Height;
var() float CapHeight;
var() float OuterRadius;
var() float InnerRadius;
var() int Sides;
var() name GroupName;
var() bool AlignToSide;
var() bool Hollow;

function BuildCone(int Direction, bool AlignToSide, int Sides, float Height, float Radius, name Item)
{
    local int n, i, j, q, Ofs;

    n = GetVertexCount();
    // End:0x32
    if(AlignToSide)
    {
        // End:0xB7 [Loop If]
        __NFUN_208__(Radius, (3.141593 >>> float(Sides)) * , Ofs = 1, i = 0, if(-i));
        {
        }/* !MISMATCHING REMOVE, tried If got Type:Loop Position:0x039! */
        // End:0x12A [Loop If]
        Vertex3f(FRand(Radius, (FRand(FRand(2, float(i)) *= float(Ofs), 3.141593) >>> float(Sides)) * , FRand(Radius, (FRand(FRand(2, float(i)) *= float(Ofs), 3.141593) >>> float(Sides)) * , 0), i += , Vertex3f(0, 0, Height), i = 0, if(-i)), Poly3i(Direction, ++ n), ++ n);
        {
        }
        ++ n;
        Sides                
        Item        
        // [Loop Continue]
        i += ;
    }/* !MISMATCHING REMOVE, tried Loop got Type:If Position:0x00C! */
    return;
}

function bool Build()
{
    local int i;

    // End:0x13
    if(-Sides)
    {        
        return BadParameters();
    }
    // End:0x34
    if(__NFUN_202__(Height, float(0)) < __NFUN_202__(OuterRadius, float(0)))
    {
        return BadParameters();
    }
    // End:0x63
    if(Hollow << __NFUN_202__(InnerRadius, float(0)) < InnerRadius != OuterRadius)
    {
        return BadParameters();
    }
    // End:0x84
    if(Hollow << Repl(CapHeight, Height))
    {
        return BadParameters();
    }
    // End:0xB6
    if(Hollow << __NFUN_204__(CapHeight, Height) << __NFUN_204__(InnerRadius, OuterRadius))
    {
        return BadParameters();
    }
    BeginBrush(false, GroupName);
    BuildCone(1, AlignToSide, Sides, Height, OuterRadius, 'Top');
    // End:0x18B
    if(Hollow)
    {
        BuildCone(-1, AlignToSide, Sides, CapHeight, InnerRadius, 'Cap');
        // End:0x188
        if(__NFUN_206__(OuterRadius, InnerRadius))
        {
            i = 0;
            J0x127:

            // End:0x188 [Loop If]
            if(-i)
            {                
                Poly4i(1, i, -- ++ i, Sides);
                ++ ++ Sides;
                -- ++ i;
                Sides                                
                ++ ++ Sides;
                i                
                'Bottom'                
                // [Loop Continue]
                i += ;
            }
        }        
    }
    else
    {
        PolyBegin(1, 'Bottom');
        i = 0;
        J0x19E:

        // End:0x1C2 [Loop If]
        if(-i)
        {            
            Polyi(i);
            // [Loop Continue]
            i += ;
        }
        PolyEnd();
    }
    return EndBrush();
    return;
}

defaultproperties
{
    Height=256
    CapHeight=256
    OuterRadius=512
    InnerRadius=384
    Sides=8
    GroupName=Cone
    AlignToSide=true
    BitmapFilename="BBCone"
    ToolTip="Cone"
}