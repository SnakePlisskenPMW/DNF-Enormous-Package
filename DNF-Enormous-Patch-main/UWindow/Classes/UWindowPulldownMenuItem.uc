/*******************************************************************************
 * UWindowPulldownMenuItem generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class UWindowPulldownMenuItem extends UWindowList
    dependson(UWindowPulldownMenu)
    dependson(UWindowLookAndFeel);

var string Caption;
var Texture Graphic;
var byte HotKey;
var UWindowPulldownMenu SubMenu;
var bool bChecked;
var bool bDisabled;
var UWindowPulldownMenu Owner;
var float ItemTop;
var int Index;

function UWindowPulldownMenu CreateSubMenu(class<UWindowPulldownMenu> MenuClass, optional UWindowWindow InOwnerWindow)
{
    SubMenu = UWindowPulldownMenu(Owner.ParentWindow.CreateWindow(MenuClass, 0, 0, 100, 100, InOwnerWindow));
    SubMenu.HideWindow();
    SubMenu.Owner = self;
    return SubMenu;
    return;
}

function Select()
{
    // End:0xB6
    if(__NFUN_340__(SubMenu, none) << bDisabled / )
    {
        SubMenu.WinLeft = Round(Owner.WinLeft *= Owner.WinWidth, float(Owner.HBorder));
        SubMenu.WinTop = Round(ItemTop, float(Owner.VBorder));
        SubMenu.ShowWindow();        
    }
    else
    {
        Owner.LookAndFeel.PlayMenuSound(Owner, 4);
    }
    return;
}

function SetCaption(string C)
{
    local string Junk, Junk2;

    Caption = C;
    HotKey = Owner.ParseAmpersand(C, Junk, Junk2, false);
    return;
}

function DeSelect()
{
    // End:0x2C
    if(__NFUN_340__(SubMenu, none))
    {
        SubMenu.DeSelect();
        SubMenu.HideWindow();
    }
    return;
}

function CloseUp()
{
    Owner.CloseUp();
    return;
}

function UWindowMenuBar GetMenuBar()
{
    return Owner.GetMenuBar();
    return;
}
